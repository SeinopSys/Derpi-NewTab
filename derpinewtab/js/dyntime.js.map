{"version":3,"sources":["dyntime.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","$","timeDifference","now","earlierdate","difference","time","getTime","day","Math","floor","hour","minute","second","week","parseInt","month","year","createTimeStr","isArray","keys","Object","returnStr","i","l","length","timeparts","replace","timePad","isNaN","abs","toString","months","weekdays","dateformat","order","date","ret","rem","weekday","wd","m","y","snLnObj","s","mi","h","d","w","mo","key","num","update","each","this","attr","postdate","Date","getDate","getFullYear","getMonth","getDay","getHours","getMinutes","splice","indexOf","RegExp","timestr","html","window","updateTimesF","apply","arguments","noAutoUpdateTimes","updateTimes","setInterval","jQuery"],"mappings":"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","file":"dyntime.js","sourcesContent":["(function($){\r\n\t'use strict';\r\n\tvar timePad = function(i){if(!isNaN(i)){i=parseInt(i);if (i<10&&i>=0)i='0'+i;else if(i<0)i='-0'+Math.abs(i);else i=i.toString()}return i};\r\n\tvar months = [\r\n\t\t\"January\", \r\n\t\t\"February\",\r\n\t\t\"March\",\r\n\t\t\"April\",\r\n\t\t\"May\",\r\n\t\t\"June\",\r\n\t\t\"July\",\r\n\t\t\"August\",\r\n\t\t\"September\",\r\n\t\t\"October\",\r\n\t\t\"November\",\r\n\t\t\"December\"\r\n\t];\r\n\tvar weekdays = [\r\n\t\t\"Sunday\",\r\n\t\t\"Monday\",\r\n\t\t\"Tuesday\",\r\n\t\t\"Wednesday\",\r\n\t\t\"Thursday\",\r\n\t\t\"Friday\",\r\n\t\t\"Saturday\",\r\n\t];\r\n\tvar dateformat = {\r\n\t\torder: '{{wd}}, {{d}} {{mo}}, {{y}}. {{h}}:{{mi}}',\r\n\t\tday: function(date){\r\n\t\t\tvar ret = date, rem = date % 10;\r\n\t\t\tif (date !== 11 && rem === 1) ret += 'st';\r\n\t\t\telse if (date !== 12 && rem === 2) ret += 'nd';\r\n\t\t\telse if (date !== 13 && rem === 3) ret += 'rd';\r\n\t\t\telse ret += 'th';\r\n\t\t\treturn ret;\r\n\t\t},\r\n\t\tweekday: function(wd){ return weekdays[parseInt(wd)] },\r\n\t\tmonth: function(m){ return months[parseInt(m)-1] },\r\n\t\tyear: function(y){ return y },\r\n\t};\r\n\tvar snLnObj = {\r\n\t\ts:'second',\r\n\t\tmi:'minute',\r\n\t\th:'hour',\r\n\t\td:'day',\r\n\t\tw:'week',\r\n\t\tmo:'month',\r\n\t\ty:'year',\r\n\t};\r\n\tvar timeparts = function(key, num){\r\n\t\tif (typeof snLnObj[key] !== 'undefined')\r\n\t\t\treturn num+' '+snLnObj[key]+(num > 1 ? 's' : '');\r\n\t};\r\n\tvar update = function(){\r\n\t\t$('time').each(function(){\r\n\t\t\tvar date = $(this).attr('datetime');\r\n\t\t\tif (typeof date !== 'string') return true;\r\n\t\t\tvar postdate = new Date(date);\r\n\t\t\t\r\n\t\t\tif (isNaN(postdate.getTime())) return true;\r\n\t\t\t\r\n\t\t\tdate = {\r\n\t\t\t\td: dateformat.day(postdate.getDate()),\r\n\t\t\t\ty: dateformat.year(postdate.getFullYear()),\r\n\t\t\t\tmo: dateformat.month(postdate.getMonth()+1),\r\n\t\t\t\twd: dateformat.weekday(postdate.getDay()),\r\n\t\t\t\th: timePad(postdate.getHours()),\r\n\t\t\t\tmi: timePad(postdate.getMinutes()),\r\n\t\t\t\torder: dateformat.order,\r\n\t\t\t};\r\n\t\t\tvar keys = Object.keys(date);\r\n\t\t\tkeys.splice(keys.indexOf('order'),1);\r\n\t\t\t\r\n\t\t\tfor (var i=0,l=keys.length; i<l; i++) date.order = date.order.replace(new RegExp('\\{\\{'+keys[i]+'\\}\\}'),date[keys[i]]);\r\n\t\t\t\r\n\t\t\t$(this).attr( 'title', date.order );\r\n\r\n\t\t\tvar now = new Date();\r\n\t\t\tvar timestr = createTimeStr(timeDifference(now,postdate));\r\n\t\t\t\r\n\t\t\t$(this).html(timestr);\r\n\t\t});\r\n\t};\r\n\t/**\r\n\t\tTime differenec function (modified)\r\n\t\tsource: http://psoug.org/snippet/Javascript-Calculate-time-difference-between-two-dates_116.htm\r\n\t\t\r\n\t\tI did not create this function entirely by myself, and I'm taking no credit for the parts I didn't write.\r\n\t**/\r\n\tfunction timeDifference(now,earlierdate) {\r\n\t\tvar difference = {\r\n\t\t\ttime: now.getTime() - earlierdate.getTime()\r\n\t\t};\r\n\t\t\r\n\t\tdifference.day = Math.floor(difference.time/1000/60/60/24);\r\n\t\tdifference.time -= difference.day*1000*60*60*24;\r\n\t\t\r\n\t\tdifference.hour = Math.floor(difference.time/1000/60/60);\r\n\t\tdifference.time -= difference.hour*1000*60*60;\r\n\t\t\r\n\t\tdifference.minute = Math.floor(difference.time/1000/60);\r\n\t\tdifference.time -= difference.minute*1000*60;\r\n\t\t\r\n\t\tdifference.second = Math.floor(difference.time/1000);\r\n\t\t\r\n\t\tif (difference.day >= 7){\r\n\t\t\tdifference.week = parseInt(difference.day/7);\r\n\t\t\tdifference.day -= difference.week*7;\r\n\t\t}\r\n\t\tif (difference.week >= 4){\r\n\t\t\tdifference.month = parseInt(difference.week/4);\r\n\t\t\tdifference.week -= difference.month*4;\r\n\t\t}\r\n\t\tif (difference.month >= 12){\r\n\t\t\tdifference.year = parseInt(difference.month/12);\r\n\t\t\tdifference.month -= difference.year*12;\r\n\t\t}\r\n\t\t\r\n\t\treturn difference;\r\n\t}\r\n\tfunction createTimeStr(obj){\r\n\t\tif (typeof obj !== 'object' || $.isArray(obj)) return false;\r\n\t\tif (obj.time > 0) delete obj.time;\r\n\t\t\r\n\t\tvar keys = Object.keys(obj), returnStr = '';\r\n\t\tfor (var i=0,l=keys.length; i<l; i++) if (keys[i] !== 'second' && obj[keys[i]] < 1) delete obj[keys[i]];\r\n\t\t\r\n\t\tif (obj.year > 0) returnStr = timeparts('y',obj.year);\r\n\t\telse if (obj.month > 0) returnStr = timeparts('mo',obj.month);\r\n\t\telse if (obj.week > 0) returnStr = timeparts('w',obj.week);\r\n\t\telse if (obj.day > 0) returnStr = timeparts('d',obj.day);\r\n\t\telse if (obj.hour > 0) returnStr = timeparts('h',obj.hour);\r\n\t\telse if (obj.minute > 0) returnStr = timeparts('mi',obj.minute);\r\n\t\telse if (obj.second > 0) returnStr = timeparts('s',obj.second);\r\n\t\t\r\n\t\treturn (returnStr+' ago').replace(/^\\sago$/,'just now');\r\n\t}\r\n\tupdate();\r\n\twindow.updateTimesF = function(){\r\n\t\tupdate.apply(update,arguments);\r\n\t};\r\n\tif (window.noAutoUpdateTimes !== true)\r\n\t\twindow.updateTimes = setInterval(update,10000);\r\n})(jQuery);\r\n"]}